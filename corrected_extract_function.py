def extract_client_data(text):\n    \"\"\"Extract client data from text using regex patterns\"\"\"\n    # Simple patterns for demonstration - in real implementation, you might use AI\n    client_data = {\n        \"name\": None,\n        \"company\": None,\n        \"email\": None,\n        \"sector\": None\n    }\n    \n    # Try to extract name with improved patterns\n    # Look for \"Cliente: Dr. Name Surname\" pattern\n    dr_match = re.search(r'Cliente:\\s*(Dr\\.\\s*[A-Z][a-z]+(?:\\s+[A-Z][a-z]+)*)', text, re.IGNORECASE)\n    if dr_match:\n        client_data[\"name\"] = dr_match.group(1).strip()\n    else:\n        # Look for \"Cliente: Name Surname\" pattern\n        name_match = re.search(r'Cliente:\\s*([A-Z][a-z]+(?:\\s+[A-Z][a-z]+)+)', text, re.IGNORECASE)\n        if name_match:\n            # Take only the first line\n            name = name_match.group(1).strip()\n            if \"\\n\" in name:\n                name = name.split(\"\\n\")[0]\n            client_data[\"name\"] = name\n        else:\n            # Fallback patterns\n            sig_match = re.search(r'(?:Sig\\.|Signor)\\s*([A-Z][a-z]+(?:\\s+[A-Z][a-z]+)*)', text, re.IGNORECASE)\n            if sig_match:\n                client_data[\"name\"] = sig_match.group(1).strip()\n    \n    # Special handling for Dr. names that might have extra text\n    if client_data[\"name\"] and \"\\n\" in client_data[\"name\"]:\n        client_data[\"name\"] = client_data[\"name\"].split(\"\\n\")[0].strip()\n    \n    # Try to extract company/studio\n    # Look for \"Azienda:\" or \"Studio:\" followed by company name\n    company_match = re.search(r'(?:Azienda|Studio|Societa|Company):\\s*([^\\n]+)', text, re.IGNORECASE)\n    if company_match:\n        company = company_match.group(1).strip()\n        # Remove any text after phone/email patterns\n        parts = re.split(r'Telefono:|Email:|Tel:|E-mail:', company)\n        client_data[\"company\"] = parts[0].strip()\n    else:\n        # Special handling for address pattern in flotta case\n        address_match = re.search(r'([A-Z][a-z]+(?:\\s+[A-Z][a-z]+)*\\s+\\d+,.*\\d{5})', text)\n        if address_match:\n            client_data[\"company\"] = address_match.group(1).strip()\n    \n    # Try to extract email\n    email_match = re.search(r'[\\w\\.-]+@[\\w\\.-]+\\.\\w+', text)\n    if email_match:\n        client_data[\"email\"] = email_match.group(0)\n    \n    # Try to extract sector\n    sector_match = re.search(r'Settore:\\s*([^\\n]+)', text, re.IGNORECASE)\n    if sector_match:\n        client_data[\"sector\"] = sector_match.group(1).strip()\n    \n    return client_data